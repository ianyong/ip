# Command
command.deadlineFormat = deadline <name of task> /by <due date>
command.deleteFormat = delete <index of task>
command.doneFormat = done <index of task>
command.eventFormat = event <name of task> /at <datetime>
command.findFormat = find <keyword>
command.toDoFormat = todo <name of task>

# Deadline
deadline.toString = [D]{0} (by: {1})

# Event
event.toString = [E]{0} (at: {1})

# Exception
# The use of the double single quotes here is allow for `MessageFormat.format` to work.
exception.invalidArgs = Invalid arguments specified for command ''{0}''.\nThe proper usage of the command is:
exception.invalidDateTime = Invalid datetime specified.\nPlease use one of the following datetime formats:\n- dd/mm/yyyy hhmm\n- dd/mm/yyyy
exception.noArgs = No arguments are accepted by command ''{0}''.

# Repl
repl.farewell = Bye. Hope to see you again soon!
repl.greeting = Hello! I'm Duke\nWhat can I do for you?
repl.internalError = An internal error occurred.
repl.invalidTaskIndex = Inputted task index does not exist!
repl.unknownCommand = Inputted command does not exist!

# Task
task.toString.done = [\u2713] {0}
task.toString.notDone = [\u2718] {0}

# TaskManager
# The use of the double single quotes here is allow for `MessageFormat.format` to work.
taskManager.addTask = Got it. I''ve added this task:\n  {0}
taskManager.listTasksPrefix = Here are the tasks in your list:
taskManager.markTaskDone = Nice! I've marked this task as done:
taskManager.matchingTasksPrefix = Here are the matching tasks in your list:
taskManager.removeTask = Noted. I''ve removed this task:\n {0}
taskManager.taskCount.plural = Now you have {1,number,integer} tasks in the list.
taskManager.taskCount.singular = Now you have {1,number,integer} task in the list.
taskManager.overdueTasksPrefix = Here are your overdue tasks:
taskManager.upcomingTasksPrefix = Here are your upcoming tasks:

# ToDo
toDo.toString = [T]{0}
